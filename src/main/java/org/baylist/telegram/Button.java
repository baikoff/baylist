package org.baylist.telegram;

import lombok.AllArgsConstructor;
import org.baylist.dto.telegram.Callbacks;
import org.baylist.dto.telegram.ChatState;
import org.baylist.service.DictionaryService;
import org.baylist.service.TodoistService;
import org.baylist.service.UserService;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardRow;

import java.util.List;

import static org.baylist.util.log.TgLog.inputLogButton;

@Component
@AllArgsConstructor
public class Button {

	private TodoistService todoist;
	private UserService userService;
	private DictionaryService dictionaryService;

	//–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ–ø—ã—Ç–Ω—ã–º –ø—É—Ç—ë–º
	// –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ - 8
	// - –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–ª–µ–∑–∞–µ—Ç 4 —Å–∏–º–≤–æ–ª–∞
	// - 3 —Å–∏–º–≤–æ–ª–∞ –µ—Å–ª–∏ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
	// –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤ –≤—ã—Å–æ—Ç—É - —Ö–∑, –ø—Ä–æ–±–æ–≤–∞–ª 20, 20 –≤–ª–µ–∑–∞–µ—Ç.
	// - –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–ª–µ–∑–∞–µ—Ç 56 —Å–∏–º–≤–æ–ª–æ–≤
	// - 41 —Å–∏–º–≤–æ–ª –µ—Å–ª–∏ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞

	public void buttons(ChatState chatState) {
		String data = chatState.getCallbackData();
		inputLogButton(chatState.getUpdate());

		if (data.equals(Callbacks.CANCEL.getCallbackData())) {
			cancel(chatState);
		} else if (data.equals(Callbacks.APPROVE.getCallbackData())) {
			approve(chatState);
		} else if (data.equals(Callbacks.VIEW.getCallbackData())) {
			view(chatState);
		} else if (data.equals(Callbacks.DONATE.getCallbackData())) {
			donate(chatState);
		} else if (data.equals(Callbacks.FEEDBACK.getCallbackData())) {
			feedback(chatState);
		} else if (data.equals(Callbacks.ADD_CATEGORY.getCallbackData())) {
			addCategory(chatState);
		} else if (data.equals(Callbacks.ADD_TASKS_TO_CATEGORY.getCallbackData())) {
			choiceCategoryForAddTaskToCategory(chatState);
		} else if (data.contains(Callbacks.CATEGORY_CHOICE.getCallbackData())) {
			addTasksToCategory(chatState);
		}

	}

	private void cancel(ChatState chatState) {
		chatState.setReplyText("–æ–∫. –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±—É–¥—É—Ç –¥–µ—è–Ω–∏—è. –∞ –ø–æ–∫–∞ —è –æ—Ç–¥–æ—Ö–Ω—É");
		userService.addCategoryOff(chatState);
		userService.feedbackOff(chatState);
	}

	private void approve(ChatState chatState) {
		chatState.setReplyText(todoist.clearBuyList());
	}

	private void view(ChatState chatState) {
		chatState.setReplyText(todoist.getBuylistProject());
		chatState.setReplyParseModeHtml();
	}

	private void donate(ChatState chatState) {
		chatState.setReplyText("""
				—Å–ø–∞—Å–∏–±–æ –∑–∞ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É!
				
				–ø—Ä–∏–º—É –ª—é–±–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–º–æ—â—å (–¥–æ 1G$)
				üí≥ (mastercard)
				4454 3000 0304 4598
				‚Çø (bitcoin)
				bc1qdgnwxpjtfhqztw6thq3yukcddrpms48wk4dhy0
				""");
	}

	private void feedback(ChatState chatState) {
		chatState.setReplyText("—è –≤–∞—Å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª—É—à–∞—é");
		userService.feedbackOn(chatState);
	}

	private void addCategory(ChatState chatState) {
		chatState.setReplyText("–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - —è –≤—Å—ë –∑–∞–ø–æ–º–Ω—é");
		userService.addCategoryOn(chatState);
	}

	private void choiceCategoryForAddTaskToCategory(ChatState chatState) {
		chatState.setReplyText("–≤ –∫–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á–∏?");
		List<String> categories = dictionaryService.getCategories();
		InlineKeyboardMarkup markup = new InlineKeyboardMarkup(categories.stream()
				.map(c -> new InlineKeyboardRow(
						InlineKeyboardButton.builder()
								.text(c)
								.callbackData(Callbacks.CATEGORY_CHOICE.getCallbackData() + c)
								.build())).toList());
		chatState.setReplyKeyboard(markup);

		userService.addCategoryOn(chatState);
	}

	private void addTasksToCategory(ChatState chatState) {
		String category = chatState.getCallbackData().substring(Callbacks.CATEGORY_CHOICE.getCallbackData().length());
		chatState.setReplyText("""
				–¥–æ–±–∞–≤–ª—è–π—Ç–µ –∑–∞–¥–∞—á–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é - %s
				
				–ø—Ä–æ—Å—Ç–æ –≤–≤–æ–¥–∏—Ç–µ –∑–∞–¥–∞—á–∏ –≤ —Å—Ç–æ–ª–±–∏–∫, –æ–¥–Ω—É –∏–ª–∏ –±–æ–ª—å—à–µ
				<code>- –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É</code>
				<code>- —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤</code>
				<code>- –±–µ–∑ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤</code>
				""".formatted(category));
		chatState.setReplyParseModeHtml();
//		InlineKeyboardMarkup markup = new InlineKeyboardMarkup(List.of(
//				new InlineKeyboardRow(InlineKeyboardButton.builder()
//						.text("–¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
//						.callbackData(Callbacks.ADD_CATEGORY.getCallbackData())
//						.build()),
//				new InlineKeyboardRow(InlineKeyboardButton.builder()
//						.text("–¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á–∏ –≤ —Ç—É –∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é?")
//						.callbackData(Callbacks.CATEGORY_CHOICE.getCallbackData() + category)
//						.build()),
//				new InlineKeyboardRow(InlineKeyboardButton.builder()
//						.text("–≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á")
//						.callbackData(Callbacks.ADD_TASKS_TO_CATEGORY.getCallbackData())
//						.build()),
//				new InlineKeyboardRow(InlineKeyboardButton.builder()
//						.text("–ø–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ —Å–µ–π—á–∞—Å –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–∏–∫–µ")
//						.callbackData(Callbacks.VIEW_CATEGORIES.getCallbackData())
//						.build()),
//				new InlineKeyboardRow(InlineKeyboardButton.builder()
//						.text("—Ñ—Å—ë, –ø–æ–∫–∞ —Ö–≤–∞—Ç–∏—Ç")
//						.callbackData(Callbacks.CANCEL.getCallbackData())
//						.build())
//		));


		userService.addCategoryOn(chatState);
		userService.addCategoryContext(chatState.getUser(), category);
	}
}

